{
  "blockchainData": {
    "schema": "LabLedger.ZKProof.v1",
    "sampleId": "EXAMPLE-SAMPLE-001",
    "analyte": "example_analyte",
    "labId": "YOUR-LAB-ID",
    "commitment": "REPLACE_WITH_ACTUAL_COMMITMENT_HASH",
    "proof": "REPLACE_WITH_ACTUAL_PROOF_HASH",
    "compliant": true,
    "threshold": 0,
    "timestamp": "2025-01-01T00:00:00.000Z",
    "zkProofVersion": "1.0"
  },
  "signature": "REPLACE_WITH_ACTUAL_SIGNATURE",
  "commitment": {
    "commitment": "REPLACE_WITH_ACTUAL_COMMITMENT_HASH",
    "secret": {
      "actualValue": 0.0,
      "threshold": 0,
      "analyte": "example_analyte",
      "sampleId": "EXAMPLE-SAMPLE-001",
      "nonce": "REPLACE_WITH_RANDOM_NONCE",
      "timestamp": 0
    },
    "isCompliant": true,
    "metadata": {
      "analyte": "example_analyte",
      "sampleId": "EXAMPLE-SAMPLE-001",
      "threshold": 0,
      "timestamp": "2025-01-01T00:00:00.000Z"
    }
  },
  "proof": {
    "proof": {
      "blindedValue": 0.0,
      "blindedThreshold": 0,
      "proofHash": "REPLACE_WITH_ACTUAL_PROOF_HASH",
      "challenge": "REPLACE_WITH_CHALLENGE_HASH",
      "r": 0,
      "isCompliant": true
    },
    "metadata": {
      "analyte": "example_analyte",
      "sampleId": "EXAMPLE-SAMPLE-001",
      "timestamp": "2025-01-01T00:00:00.000Z",
      "prover": "LabLedger-ZK-v1.0"
    }
  },
  "publishReady": false,
  "_note": "This is an example template. Replace all placeholder values with actual ZK proof data generated by your application."
}